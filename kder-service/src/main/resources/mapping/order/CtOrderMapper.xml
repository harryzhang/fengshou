<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kder.business.dao.order.CtOrderMapper">
  <resultMap id="BaseResultMap" type="com.kder.business.entity.order.CtOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    <id column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="prod_id" jdbcType="BIGINT" property="prodId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="order_period" jdbcType="VARCHAR" property="orderPeriod" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="order_amt" jdbcType="DECIMAL" property="orderAmt" />
    <result column="user_cert_no" jdbcType="VARCHAR" property="userCertNo" />
    <result column="user_cert_type" jdbcType="INTEGER" property="userCertType" />
    <result column="user_address" jdbcType="VARCHAR" property="userAddress" />
    <result column="user_birth" jdbcType="DATE" property="userBirth" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="recognizee_name" jdbcType="VARCHAR" property="recognizeeName" />
    <result column="recognizee_birth" jdbcType="DATE" property="recognizeeBirth" />
    <result column="recognizee_cert_type" jdbcType="INTEGER" property="recognizeeCertType" />
    <result column="recognizee_cert_no" jdbcType="VARCHAR" property="recognizeeCertNo" />
    <result column="recognizee_phone" jdbcType="VARCHAR" property="recognizeePhone" />
    <result column="recognizee_address" jdbcType="VARCHAR" property="recognizeeAddress" />
    <result column="recognizee_gender" jdbcType="VARCHAR" property="recognizeeGender" />
    <result column="recognizee_security" jdbcType="VARCHAR" property="recognizeeSecurity" />
    <result column="is_same" jdbcType="VARCHAR" property="isSame" />
    <result column="sales_id" jdbcType="BIGINT" property="salesId" />
    <result column="sales_man" jdbcType="VARCHAR" property="salesMan" />
    <result column="commission_rate" jdbcType="DECIMAL" property="commissionRate" />
    <result column="commission_amt" jdbcType="DECIMAL" property="commissionAmt" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="audit_date" jdbcType="DATE" property="auditDate" />
    <result column="audit_instance_id" jdbcType="BIGINT" property="auditInstanceId" />
    <result column="private_cust_id" jdbcType="BIGINT" property="privateCustId" />
    <result column="policy_comp_id" jdbcType="BIGINT" property="policyCompId" />
    <result column="policy_company" jdbcType="VARCHAR" property="policyCompany" />
    <result column="org_id" jdbcType="BIGINT" property="orgId" />
    <result column="org_company" jdbcType="VARCHAR" property="orgCompany" />
    <result column="card_no" jdbcType="VARCHAR" property="cardNo" />
    <result column="policy_type" jdbcType="VARCHAR" property="policyType" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="product_code" jdbcType="VARCHAR" property="productCode" />
    <result column="proxy_rate" jdbcType="DECIMAL" property="proxyRate" />
    <result column="proxy_fee" jdbcType="DECIMAL" property="proxyFee" />
    <result column="bill_no" jdbcType="VARCHAR" property="billNo" />
    <result column="next_policy_fee" jdbcType="DECIMAL" property="nextPolicyFee" />
    <result column="first_policy_fee" jdbcType="DECIMAL" property="firstPolicyFee" />
    <result column="pay_period" jdbcType="VARCHAR" property="payPeriod" />
    <result column="pay_type" jdbcType="VARCHAR" property="payType" />
    <result column="policy_amt" jdbcType="DECIMAL" property="policyAmt" />
    <result column="policy_man_cnt" jdbcType="INTEGER" property="policyManCnt" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="order_from" jdbcType="VARCHAR" property="orderFrom" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    order_id, order_no, prod_id, user_id, order_status, order_period, start_time, end_time, 
    order_amt, user_cert_no, user_cert_type, user_address, user_birth, user_name, user_phone, 
    recognizee_name, recognizee_birth, recognizee_cert_type, recognizee_cert_no, recognizee_phone, 
    recognizee_address, recognizee_gender, recognizee_security, is_same, sales_id, sales_man, 
    commission_rate, commission_amt, project_id, audit_status, audit_date, audit_instance_id, 
    private_cust_id, policy_comp_id, policy_company, org_id, org_company, card_no, policy_type, 
    product_name, product_code, proxy_rate, proxy_fee, bill_no, next_policy_fee, first_policy_fee, 
    pay_period, pay_type, policy_amt, policy_man_cnt, remark, order_from, create_time, 
    update_time, update_by, create_by
  </sql>
  <select id="selectByExample" parameterType="com.kder.business.entity.order.CtOrderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ct_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from ct_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <select id="queryListPage" parameterType="Map" resultMap="BaseResultMap">
		SELECT 
			<include refid="Base_Column_List" />
		  FROM ct_order
		  <trim prefix="WHERE" prefixOverrides="AND |OR "> 
			<if test="orderId != null">  
				AND order_id = #{orderId}
			</if>
			<if test="policyType != null">  
				AND policy_type = #{policyType}
			</if>
			<if test="orderNo != null">  
				AND order_no = #{orderNo}
			</if>
			<if test="privateCustId != null">  
				AND private_cust_id = #{privateCustId}
			</if>
			<if test="prodId != null">  
				AND prod_id = #{prodId}
			</if>
			<if test="userId != null">  
				AND user_id = #{userId}
			</if>
			<if test="userName != null">  
				AND user_name  like CONCAT('%',#{userName},'%')
			</if>
			<if test="orderStatus != null">  
				AND order_status = #{orderStatus}
			</if>
			<if test="orderPeriod != null">  
				AND order_period = #{orderPeriod}
			</if>
			<if test="startTime != null"> 
				<![CDATA[
					AND start_time >= #{startTime}
				]]> 
				
			</if>
			<if test="endTime != null"> 
				<![CDATA[
					AND end_time <= #{endTime}
				]]> 
			</if>
			<if test="orderAmt != null">  
				AND order_amt = #{orderAmt}
			</if>
			<if test="userCertNo != null">  
				AND user_cert_no = #{userCertNo}
			</if>
			<if test="userCertType != null">  
				AND user_cert_type = #{userCertType}
			</if>
			<if test="userAddress != null">  
				AND user_address = #{userAddress}
			</if>
			<if test="userPhone != null">  
				AND user_phone = #{userPhone}
			</if>
			<if test="recognizeeName != null">  
				AND recognizee_name like CONCAT('%',#{recognizeeName},'%')
			</if>
			<if test="recognizeeBirth != null">  
				AND recognizee_birth = #{recognizeeBirth}
			</if>
			<if test="recognizeeCertType != null">  
				AND recognizee_cert_type = #{recognizeeCertType}
			</if>
			<if test="recognizeeCertNo != null">  
				AND recognizee_cert_no = #{recognizeeCertNo}
			</if>
			<if test="recognizeePhone != null">  
				AND recognizee_phone = #{recognizeePhone}
			</if>
			<if test="recognizeeAddress != null">  
				AND recognizee_address = #{recognizeeAddress}
			</if>
			<if test="recognizeeGender != null">  
				AND recognizee_gender = #{recognizeeGender}
			</if>
			<if test="recognizeeSecurity != null">  
				AND recognizee_security = #{recognizeeSecurity}
			</if>
			<if test="isSame != null">  
				AND is_same = #{isSame}
			</if>
			<if test="salesId != null">  
				AND sales_id = #{salesId}
			</if>
			<if test="salesMan != null">  
				AND sales_man = #{salesMan}
			</if>
			<if test="commissionAmt != null">  
				AND commission_amt = #{commissionAmt}
			</if>
			<if test="projectId != null">  
				AND project_id = #{projectId}
			</if>
			<if test="auditStatus != null">  
				AND audit_status = #{auditStatus}
			</if>
			<if test="auditDate != null">  
				AND audit_date = #{auditDate}
			</if>
			<if test="auditInstanceId != null">  
				AND audit_instance_id = #{auditInstanceId}
			</if>
			<if test="createTime != null">
				AND create_time = #{createTime}
			</if>
			<if test="searchStartTime != null">
				<![CDATA[
					AND start_time >= #{searchStartTime}
				]]>  
			</if>
			<if test="searchEndTime != null">
				<![CDATA[
					AND start_time <= #{searchEndTime}
				]]>  
			</if>
			<if test="updateTime != null">  
				AND update_time = #{updateTime}
			</if>
         </trim> 

	</select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    delete from ct_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kder.business.entity.order.CtOrderExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    delete from ct_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kder.business.entity.order.CtOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    insert into ct_order (order_id, order_no, prod_id, 
      user_id, order_status, order_period, 
      start_time, end_time, order_amt, 
      user_cert_no, user_cert_type, user_address, 
      user_birth, user_name, user_phone, 
      recognizee_name, recognizee_birth, recognizee_cert_type, 
      recognizee_cert_no, recognizee_phone, recognizee_address, 
      recognizee_gender, recognizee_security, is_same, 
      sales_id, sales_man, commission_rate, 
      commission_amt, project_id, audit_status, 
      audit_date, audit_instance_id, private_cust_id, 
      policy_comp_id, policy_company, org_id, 
      org_company, card_no, policy_type, 
      product_name, product_code, proxy_rate, 
      proxy_fee, bill_no, next_policy_fee, 
      first_policy_fee, pay_period, pay_type, 
      policy_amt, policy_man_cnt, remark, 
      order_from, create_time, update_time, 
      update_by, create_by)
    values (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{prodId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{orderStatus,jdbcType=INTEGER}, #{orderPeriod,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, #{orderAmt,jdbcType=DECIMAL}, 
      #{userCertNo,jdbcType=VARCHAR}, #{userCertType,jdbcType=INTEGER}, #{userAddress,jdbcType=VARCHAR}, 
      #{userBirth,jdbcType=DATE}, #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR}, 
      #{recognizeeName,jdbcType=VARCHAR}, #{recognizeeBirth,jdbcType=DATE}, #{recognizeeCertType,jdbcType=INTEGER}, 
      #{recognizeeCertNo,jdbcType=VARCHAR}, #{recognizeePhone,jdbcType=VARCHAR}, #{recognizeeAddress,jdbcType=VARCHAR}, 
      #{recognizeeGender,jdbcType=VARCHAR}, #{recognizeeSecurity,jdbcType=VARCHAR}, #{isSame,jdbcType=VARCHAR}, 
      #{salesId,jdbcType=BIGINT}, #{salesMan,jdbcType=VARCHAR}, #{commissionRate,jdbcType=DECIMAL}, 
      #{commissionAmt,jdbcType=DECIMAL}, #{projectId,jdbcType=BIGINT}, #{auditStatus,jdbcType=INTEGER}, 
      #{auditDate,jdbcType=DATE}, #{auditInstanceId,jdbcType=BIGINT}, #{privateCustId,jdbcType=BIGINT}, 
      #{policyCompId,jdbcType=BIGINT}, #{policyCompany,jdbcType=VARCHAR}, #{orgId,jdbcType=BIGINT}, 
      #{orgCompany,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, #{policyType,jdbcType=VARCHAR}, 
      #{productName,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, #{proxyRate,jdbcType=DECIMAL}, 
      #{proxyFee,jdbcType=DECIMAL}, #{billNo,jdbcType=VARCHAR}, #{nextPolicyFee,jdbcType=DECIMAL}, 
      #{firstPolicyFee,jdbcType=DECIMAL}, #{payPeriod,jdbcType=VARCHAR}, #{payType,jdbcType=VARCHAR}, 
      #{policyAmt,jdbcType=DECIMAL}, #{policyManCnt,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{orderFrom,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}, 
      #{updateBy,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.kder.business.entity.order.CtOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    insert into ct_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="prodId != null">
        prod_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="orderPeriod != null">
        order_period,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="orderAmt != null">
        order_amt,
      </if>
      <if test="userCertNo != null">
        user_cert_no,
      </if>
      <if test="userCertType != null">
        user_cert_type,
      </if>
      <if test="userAddress != null">
        user_address,
      </if>
      <if test="userBirth != null">
        user_birth,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="recognizeeName != null">
        recognizee_name,
      </if>
      <if test="recognizeeBirth != null">
        recognizee_birth,
      </if>
      <if test="recognizeeCertType != null">
        recognizee_cert_type,
      </if>
      <if test="recognizeeCertNo != null">
        recognizee_cert_no,
      </if>
      <if test="recognizeePhone != null">
        recognizee_phone,
      </if>
      <if test="recognizeeAddress != null">
        recognizee_address,
      </if>
      <if test="recognizeeGender != null">
        recognizee_gender,
      </if>
      <if test="recognizeeSecurity != null">
        recognizee_security,
      </if>
      <if test="isSame != null">
        is_same,
      </if>
      <if test="salesId != null">
        sales_id,
      </if>
      <if test="salesMan != null">
        sales_man,
      </if>
      <if test="commissionRate != null">
        commission_rate,
      </if>
      <if test="commissionAmt != null">
        commission_amt,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="auditDate != null">
        audit_date,
      </if>
      <if test="auditInstanceId != null">
        audit_instance_id,
      </if>
      <if test="privateCustId != null">
        private_cust_id,
      </if>
      <if test="policyCompId != null">
        policy_comp_id,
      </if>
      <if test="policyCompany != null">
        policy_company,
      </if>
      <if test="orgId != null">
        org_id,
      </if>
      <if test="orgCompany != null">
        org_company,
      </if>
      <if test="cardNo != null">
        card_no,
      </if>
      <if test="policyType != null">
        policy_type,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productCode != null">
        product_code,
      </if>
      <if test="proxyRate != null">
        proxy_rate,
      </if>
      <if test="proxyFee != null">
        proxy_fee,
      </if>
      <if test="billNo != null">
        bill_no,
      </if>
      <if test="nextPolicyFee != null">
        next_policy_fee,
      </if>
      <if test="firstPolicyFee != null">
        first_policy_fee,
      </if>
      <if test="payPeriod != null">
        pay_period,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="policyAmt != null">
        policy_amt,
      </if>
      <if test="policyManCnt != null">
        policy_man_cnt,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="orderFrom != null">
        order_from,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="prodId != null">
        #{prodId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderPeriod != null">
        #{orderPeriod,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="orderAmt != null">
        #{orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="userCertNo != null">
        #{userCertNo,jdbcType=VARCHAR},
      </if>
      <if test="userCertType != null">
        #{userCertType,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userBirth != null">
        #{userBirth,jdbcType=DATE},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeName != null">
        #{recognizeeName,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeBirth != null">
        #{recognizeeBirth,jdbcType=DATE},
      </if>
      <if test="recognizeeCertType != null">
        #{recognizeeCertType,jdbcType=INTEGER},
      </if>
      <if test="recognizeeCertNo != null">
        #{recognizeeCertNo,jdbcType=VARCHAR},
      </if>
      <if test="recognizeePhone != null">
        #{recognizeePhone,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeAddress != null">
        #{recognizeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeGender != null">
        #{recognizeeGender,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeSecurity != null">
        #{recognizeeSecurity,jdbcType=VARCHAR},
      </if>
      <if test="isSame != null">
        #{isSame,jdbcType=VARCHAR},
      </if>
      <if test="salesId != null">
        #{salesId,jdbcType=BIGINT},
      </if>
      <if test="salesMan != null">
        #{salesMan,jdbcType=VARCHAR},
      </if>
      <if test="commissionRate != null">
        #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="commissionAmt != null">
        #{commissionAmt,jdbcType=DECIMAL},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditDate != null">
        #{auditDate,jdbcType=DATE},
      </if>
      <if test="auditInstanceId != null">
        #{auditInstanceId,jdbcType=BIGINT},
      </if>
      <if test="privateCustId != null">
        #{privateCustId,jdbcType=BIGINT},
      </if>
      <if test="policyCompId != null">
        #{policyCompId,jdbcType=BIGINT},
      </if>
      <if test="policyCompany != null">
        #{policyCompany,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        #{orgId,jdbcType=BIGINT},
      </if>
      <if test="orgCompany != null">
        #{orgCompany,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="policyType != null">
        #{policyType,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="proxyRate != null">
        #{proxyRate,jdbcType=DECIMAL},
      </if>
      <if test="proxyFee != null">
        #{proxyFee,jdbcType=DECIMAL},
      </if>
      <if test="billNo != null">
        #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="nextPolicyFee != null">
        #{nextPolicyFee,jdbcType=DECIMAL},
      </if>
      <if test="firstPolicyFee != null">
        #{firstPolicyFee,jdbcType=DECIMAL},
      </if>
      <if test="payPeriod != null">
        #{payPeriod,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=VARCHAR},
      </if>
      <if test="policyAmt != null">
        #{policyAmt,jdbcType=DECIMAL},
      </if>
      <if test="policyManCnt != null">
        #{policyManCnt,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderFrom != null">
        #{orderFrom,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kder.business.entity.order.CtOrderExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    select count(*) from ct_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    update ct_order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=BIGINT},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.prodId != null">
        prod_id = #{record.prodId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderPeriod != null">
        order_period = #{record.orderPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.orderAmt != null">
        order_amt = #{record.orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.userCertNo != null">
        user_cert_no = #{record.userCertNo,jdbcType=VARCHAR},
      </if>
      <if test="record.userCertType != null">
        user_cert_type = #{record.userCertType,jdbcType=INTEGER},
      </if>
      <if test="record.userAddress != null">
        user_address = #{record.userAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userBirth != null">
        user_birth = #{record.userBirth,jdbcType=DATE},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userPhone != null">
        user_phone = #{record.userPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeeName != null">
        recognizee_name = #{record.recognizeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeeBirth != null">
        recognizee_birth = #{record.recognizeeBirth,jdbcType=DATE},
      </if>
      <if test="record.recognizeeCertType != null">
        recognizee_cert_type = #{record.recognizeeCertType,jdbcType=INTEGER},
      </if>
      <if test="record.recognizeeCertNo != null">
        recognizee_cert_no = #{record.recognizeeCertNo,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeePhone != null">
        recognizee_phone = #{record.recognizeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeeAddress != null">
        recognizee_address = #{record.recognizeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeeGender != null">
        recognizee_gender = #{record.recognizeeGender,jdbcType=VARCHAR},
      </if>
      <if test="record.recognizeeSecurity != null">
        recognizee_security = #{record.recognizeeSecurity,jdbcType=VARCHAR},
      </if>
      <if test="record.isSame != null">
        is_same = #{record.isSame,jdbcType=VARCHAR},
      </if>
      <if test="record.salesId != null">
        sales_id = #{record.salesId,jdbcType=BIGINT},
      </if>
      <if test="record.salesMan != null">
        sales_man = #{record.salesMan,jdbcType=VARCHAR},
      </if>
      <if test="record.commissionRate != null">
        commission_rate = #{record.commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="record.commissionAmt != null">
        commission_amt = #{record.commissionAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.auditStatus != null">
        audit_status = #{record.auditStatus,jdbcType=INTEGER},
      </if>
      <if test="record.auditDate != null">
        audit_date = #{record.auditDate,jdbcType=DATE},
      </if>
      <if test="record.auditInstanceId != null">
        audit_instance_id = #{record.auditInstanceId,jdbcType=BIGINT},
      </if>
      <if test="record.privateCustId != null">
        private_cust_id = #{record.privateCustId,jdbcType=BIGINT},
      </if>
      <if test="record.policyCompId != null">
        policy_comp_id = #{record.policyCompId,jdbcType=BIGINT},
      </if>
      <if test="record.policyCompany != null">
        policy_company = #{record.policyCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.orgId != null">
        org_id = #{record.orgId,jdbcType=BIGINT},
      </if>
      <if test="record.orgCompany != null">
        org_company = #{record.orgCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNo != null">
        card_no = #{record.cardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.policyType != null">
        policy_type = #{record.policyType,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null">
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.proxyRate != null">
        proxy_rate = #{record.proxyRate,jdbcType=DECIMAL},
      </if>
      <if test="record.proxyFee != null">
        proxy_fee = #{record.proxyFee,jdbcType=DECIMAL},
      </if>
      <if test="record.billNo != null">
        bill_no = #{record.billNo,jdbcType=VARCHAR},
      </if>
      <if test="record.nextPolicyFee != null">
        next_policy_fee = #{record.nextPolicyFee,jdbcType=DECIMAL},
      </if>
      <if test="record.firstPolicyFee != null">
        first_policy_fee = #{record.firstPolicyFee,jdbcType=DECIMAL},
      </if>
      <if test="record.payPeriod != null">
        pay_period = #{record.payPeriod,jdbcType=VARCHAR},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=VARCHAR},
      </if>
      <if test="record.policyAmt != null">
        policy_amt = #{record.policyAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.policyManCnt != null">
        policy_man_cnt = #{record.policyManCnt,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.orderFrom != null">
        order_from = #{record.orderFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    update ct_order
    set order_id = #{record.orderId,jdbcType=BIGINT},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      prod_id = #{record.prodId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      order_period = #{record.orderPeriod,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=DATE},
      end_time = #{record.endTime,jdbcType=DATE},
      order_amt = #{record.orderAmt,jdbcType=DECIMAL},
      user_cert_no = #{record.userCertNo,jdbcType=VARCHAR},
      user_cert_type = #{record.userCertType,jdbcType=INTEGER},
      user_address = #{record.userAddress,jdbcType=VARCHAR},
      user_birth = #{record.userBirth,jdbcType=DATE},
      user_name = #{record.userName,jdbcType=VARCHAR},
      user_phone = #{record.userPhone,jdbcType=VARCHAR},
      recognizee_name = #{record.recognizeeName,jdbcType=VARCHAR},
      recognizee_birth = #{record.recognizeeBirth,jdbcType=DATE},
      recognizee_cert_type = #{record.recognizeeCertType,jdbcType=INTEGER},
      recognizee_cert_no = #{record.recognizeeCertNo,jdbcType=VARCHAR},
      recognizee_phone = #{record.recognizeePhone,jdbcType=VARCHAR},
      recognizee_address = #{record.recognizeeAddress,jdbcType=VARCHAR},
      recognizee_gender = #{record.recognizeeGender,jdbcType=VARCHAR},
      recognizee_security = #{record.recognizeeSecurity,jdbcType=VARCHAR},
      is_same = #{record.isSame,jdbcType=VARCHAR},
      sales_id = #{record.salesId,jdbcType=BIGINT},
      sales_man = #{record.salesMan,jdbcType=VARCHAR},
      commission_rate = #{record.commissionRate,jdbcType=DECIMAL},
      commission_amt = #{record.commissionAmt,jdbcType=DECIMAL},
      project_id = #{record.projectId,jdbcType=BIGINT},
      audit_status = #{record.auditStatus,jdbcType=INTEGER},
      audit_date = #{record.auditDate,jdbcType=DATE},
      audit_instance_id = #{record.auditInstanceId,jdbcType=BIGINT},
      private_cust_id = #{record.privateCustId,jdbcType=BIGINT},
      policy_comp_id = #{record.policyCompId,jdbcType=BIGINT},
      policy_company = #{record.policyCompany,jdbcType=VARCHAR},
      org_id = #{record.orgId,jdbcType=BIGINT},
      org_company = #{record.orgCompany,jdbcType=VARCHAR},
      card_no = #{record.cardNo,jdbcType=VARCHAR},
      policy_type = #{record.policyType,jdbcType=VARCHAR},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      proxy_rate = #{record.proxyRate,jdbcType=DECIMAL},
      proxy_fee = #{record.proxyFee,jdbcType=DECIMAL},
      bill_no = #{record.billNo,jdbcType=VARCHAR},
      next_policy_fee = #{record.nextPolicyFee,jdbcType=DECIMAL},
      first_policy_fee = #{record.firstPolicyFee,jdbcType=DECIMAL},
      pay_period = #{record.payPeriod,jdbcType=VARCHAR},
      pay_type = #{record.payType,jdbcType=VARCHAR},
      policy_amt = #{record.policyAmt,jdbcType=DECIMAL},
      policy_man_cnt = #{record.policyManCnt,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      order_from = #{record.orderFrom,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      update_time = #{record.updateTime,jdbcType=DATE},
      update_by = #{record.updateBy,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kder.business.entity.order.CtOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    update ct_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="prodId != null">
        prod_id = #{prodId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderPeriod != null">
        order_period = #{orderPeriod,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="orderAmt != null">
        order_amt = #{orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="userCertNo != null">
        user_cert_no = #{userCertNo,jdbcType=VARCHAR},
      </if>
      <if test="userCertType != null">
        user_cert_type = #{userCertType,jdbcType=INTEGER},
      </if>
      <if test="userAddress != null">
        user_address = #{userAddress,jdbcType=VARCHAR},
      </if>
      <if test="userBirth != null">
        user_birth = #{userBirth,jdbcType=DATE},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeName != null">
        recognizee_name = #{recognizeeName,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeBirth != null">
        recognizee_birth = #{recognizeeBirth,jdbcType=DATE},
      </if>
      <if test="recognizeeCertType != null">
        recognizee_cert_type = #{recognizeeCertType,jdbcType=INTEGER},
      </if>
      <if test="recognizeeCertNo != null">
        recognizee_cert_no = #{recognizeeCertNo,jdbcType=VARCHAR},
      </if>
      <if test="recognizeePhone != null">
        recognizee_phone = #{recognizeePhone,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeAddress != null">
        recognizee_address = #{recognizeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeGender != null">
        recognizee_gender = #{recognizeeGender,jdbcType=VARCHAR},
      </if>
      <if test="recognizeeSecurity != null">
        recognizee_security = #{recognizeeSecurity,jdbcType=VARCHAR},
      </if>
      <if test="isSame != null">
        is_same = #{isSame,jdbcType=VARCHAR},
      </if>
      <if test="salesId != null">
        sales_id = #{salesId,jdbcType=BIGINT},
      </if>
      <if test="salesMan != null">
        sales_man = #{salesMan,jdbcType=VARCHAR},
      </if>
      <if test="commissionRate != null">
        commission_rate = #{commissionRate,jdbcType=DECIMAL},
      </if>
      <if test="commissionAmt != null">
        commission_amt = #{commissionAmt,jdbcType=DECIMAL},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=INTEGER},
      </if>
      <if test="auditDate != null">
        audit_date = #{auditDate,jdbcType=DATE},
      </if>
      <if test="auditInstanceId != null">
        audit_instance_id = #{auditInstanceId,jdbcType=BIGINT},
      </if>
      <if test="privateCustId != null">
        private_cust_id = #{privateCustId,jdbcType=BIGINT},
      </if>
      <if test="policyCompId != null">
        policy_comp_id = #{policyCompId,jdbcType=BIGINT},
      </if>
      <if test="policyCompany != null">
        policy_company = #{policyCompany,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null">
        org_id = #{orgId,jdbcType=BIGINT},
      </if>
      <if test="orgCompany != null">
        org_company = #{orgCompany,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null">
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="policyType != null">
        policy_type = #{policyType,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null">
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="proxyRate != null">
        proxy_rate = #{proxyRate,jdbcType=DECIMAL},
      </if>
      <if test="proxyFee != null">
        proxy_fee = #{proxyFee,jdbcType=DECIMAL},
      </if>
      <if test="billNo != null">
        bill_no = #{billNo,jdbcType=VARCHAR},
      </if>
      <if test="nextPolicyFee != null">
        next_policy_fee = #{nextPolicyFee,jdbcType=DECIMAL},
      </if>
      <if test="firstPolicyFee != null">
        first_policy_fee = #{firstPolicyFee,jdbcType=DECIMAL},
      </if>
      <if test="payPeriod != null">
        pay_period = #{payPeriod,jdbcType=VARCHAR},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=VARCHAR},
      </if>
      <if test="policyAmt != null">
        policy_amt = #{policyAmt,jdbcType=DECIMAL},
      </if>
      <if test="policyManCnt != null">
        policy_man_cnt = #{policyManCnt,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="orderFrom != null">
        order_from = #{orderFrom,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kder.business.entity.order.CtOrder">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sun Jul 01 13:48:22 CST 2018.
    -->
    update ct_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      prod_id = #{prodId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      order_status = #{orderStatus,jdbcType=INTEGER},
      order_period = #{orderPeriod,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      order_amt = #{orderAmt,jdbcType=DECIMAL},
      user_cert_no = #{userCertNo,jdbcType=VARCHAR},
      user_cert_type = #{userCertType,jdbcType=INTEGER},
      user_address = #{userAddress,jdbcType=VARCHAR},
      user_birth = #{userBirth,jdbcType=DATE},
      user_name = #{userName,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      recognizee_name = #{recognizeeName,jdbcType=VARCHAR},
      recognizee_birth = #{recognizeeBirth,jdbcType=DATE},
      recognizee_cert_type = #{recognizeeCertType,jdbcType=INTEGER},
      recognizee_cert_no = #{recognizeeCertNo,jdbcType=VARCHAR},
      recognizee_phone = #{recognizeePhone,jdbcType=VARCHAR},
      recognizee_address = #{recognizeeAddress,jdbcType=VARCHAR},
      recognizee_gender = #{recognizeeGender,jdbcType=VARCHAR},
      recognizee_security = #{recognizeeSecurity,jdbcType=VARCHAR},
      is_same = #{isSame,jdbcType=VARCHAR},
      sales_id = #{salesId,jdbcType=BIGINT},
      sales_man = #{salesMan,jdbcType=VARCHAR},
      commission_rate = #{commissionRate,jdbcType=DECIMAL},
      commission_amt = #{commissionAmt,jdbcType=DECIMAL},
      project_id = #{projectId,jdbcType=BIGINT},
      audit_status = #{auditStatus,jdbcType=INTEGER},
      audit_date = #{auditDate,jdbcType=DATE},
      audit_instance_id = #{auditInstanceId,jdbcType=BIGINT},
      private_cust_id = #{privateCustId,jdbcType=BIGINT},
      policy_comp_id = #{policyCompId,jdbcType=BIGINT},
      policy_company = #{policyCompany,jdbcType=VARCHAR},
      org_id = #{orgId,jdbcType=BIGINT},
      org_company = #{orgCompany,jdbcType=VARCHAR},
      card_no = #{cardNo,jdbcType=VARCHAR},
      policy_type = #{policyType,jdbcType=VARCHAR},
      product_name = #{productName,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      proxy_rate = #{proxyRate,jdbcType=DECIMAL},
      proxy_fee = #{proxyFee,jdbcType=DECIMAL},
      bill_no = #{billNo,jdbcType=VARCHAR},
      next_policy_fee = #{nextPolicyFee,jdbcType=DECIMAL},
      first_policy_fee = #{firstPolicyFee,jdbcType=DECIMAL},
      pay_period = #{payPeriod,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=VARCHAR},
      policy_amt = #{policyAmt,jdbcType=DECIMAL},
      policy_man_cnt = #{policyManCnt,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      order_from = #{orderFrom,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE},
      update_by = #{updateBy,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=BIGINT}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  
  <insert id="insertImportLog" parameterType="map">
  	INSERT INTO `import_log` 
	(`import_id`, 
	`file_name`, 
	`user_id`, 
	`import_type`,
	`create_time`, 
	`update_time`
	)
	VALUES
	(#{importId}, 
	#{fileName}, 
	#{userId},
	#{importType}, 
	now(), 
	now()
	);
  </insert>
  
  <insert id="importOrder" parameterType="map">
  	  INSERT INTO `t_fs_temp` 
	(`Column_0`, 
	`Column_1`, 
	`Column_2`, 
	`Column_3`, 
	`Column_4`, 
	`Column_5`, 
	`Column_6`, 
	`Column_7`, 
	`Column_8`, 
	`Column_9`, 
	`Column_10`, 
	`Column_11`, 
	`Column_12`, 
	`Column_13`, 
	`Column_14`, 
	`Column_15`, 
	`Column_16`, 
	`Column_17`, 
	`Column_18`, 
	`Column_19`, 
	`Column_20`, 
	`Column_21`, 
	`Column_22`
	)
	VALUES(
	#{Column_0}, 
    #{Column_1}, 
	#{Column_2}, 
	#{Column_3}, 
	#{Column_4}, 
	#{Column_5}, 
	#{Column_6}, 
	#{Column_7}, 
	#{Column_8}, 
	#{Column_9}, 
	#{Column_10}, 
	#{Column_11}, 
	#{Column_12}, 
	#{Column_13}, 
	#{Column_14}, 
	#{Column_15}, 
	#{Column_16}, 
	#{Column_17}, 
	#{Column_18}, 
	#{Column_19}, 
	#{Column_20}, 
	#{Column_21}, 
	#{Column_22}
	);
  </insert>
  
  <insert id="insertOrderTabBybxxh3" parameterType="map">
  	insert into ct_order(
	  order_no,
      prod_id,
      order_status,
      order_period,
      start_time,
      end_time,
      order_amt,
      user_cert_no,
      user_cert_type,
      user_name,
      user_phone,
      recognizee_name,
      recognizee_cert_type,
      recognizee_cert_no,
      recognizee_phone,
      is_same,
      sales_id,
      sales_man,
      commission_rate,
      commission_amt,
      policy_comp_id,
      policy_company,
      org_id,
      org_company,
      card_no,
      policy_type,
        order_policy_type_name,
        order_policy_type_id,
        product_name,
        product_code,
        proxy_rate,
        proxy_fee,
        bill_no,
        next_policy_fee,
        first_policy_fee,
        pay_period,
        pay_type,
        policy_amt,
        policy_man_cnt,
        remark,
        order_from,
        create_time,
        update_time
	)
	select a.column_3 as order_no,
      b.ins_id as prod_id,
      '1' as order_status,
      '' as order_period,
      a.column_13 as  start_time,
      a.column_14 as  end_time,
      a.column_7 as  order_amt,
      '' as  user_cert_no,
      0 as   user_cert_type,
      '' as  user_name,
      '' as user_phone,
      '' as recognizee_name,
      0 as recognizee_cert_type,
      '' as recognizee_cert_no,
      '' as recognizee_phone,
      'true' as   is_same,
      m.id as sales_id,
      a.column_19 as sales_man,
      a.column_17 as   commission_rate,
      a.column_18 as   commission_amt,
      ic.company_id as   policy_comp_id,
      ic.company_name as policy_company,
      o.id as org_id,
      o.org_name as  org_company,
      '' as card_no,
      #{policyType} as policy_type,
        pt.name as order_policy_type_name,
        pt.id as order_policy_type_id,
        b.title as product_name,
        '' as product_code,
        a.column_15 as proxy_rate,
        a.column_16 as proxy_fee,
        '' as bill_no,
        a.column_11 as next_policy_fee,
        a.column_10 as first_policy_fee,
        a.column_9 as pay_period,
        a.column_8 as pay_type,
        a.column_6 as policy_amt,
        a.column_5 as policy_man_cnt,
        '' as remark,
        '1' as order_from,
        a.column_12 as create_time,
        now() as update_time 
from t_fs_temp a left join t_fs_insurance b on a.column_2 = b.title
                 left join managers m on a.column_19  = m.nickname
                 left join t_fs_insurance_company ic  on a.column_1 = ic.company_name
                 left join t_org o on a.column_4 = o.org_name
                 left join t_policy_type pt on a.column_2  = pt.`name`
where a.column_0 = #{importId}    
  </insert>
  
  <insert id="insertOrderTabBybxxh2" parameterType="map">
  	insert into ct_order(
	  order_no,
      prod_id,
      order_status,
      order_period,
      start_time,
      end_time,
      order_amt,
      user_cert_no,
      user_cert_type,
      user_name,
      user_phone,
      recognizee_name,
      recognizee_cert_type,
      recognizee_cert_no,
      recognizee_phone,
      is_same,
      sales_id,
      sales_man,
      commission_rate,
      commission_amt,
      policy_comp_id,
      policy_company,
      org_id,
      org_company,
      card_no,
      policy_type,
        order_policy_type_name,
        order_policy_type_id,
        product_name,
        product_code,
        proxy_rate,
        proxy_fee,
        bill_no,
        next_policy_fee,
        first_policy_fee,
        pay_period,
        pay_type,
        policy_amt,
        policy_man_cnt,
        remark,
        order_from,
        create_time,
        update_time
	)
	select a.column_5 as order_no,
      b.ins_id as prod_id,
      '1' as order_status,
      null as order_period,
      a.column_6 as  start_time,
      a.column_7 as  end_time,
      a.column_13 as  order_amt,
      null as  user_cert_no,
      0 as   user_cert_type,
      a.column_4 as  user_name,
      null as user_phone,
      a.column_4 as recognizee_name,
      0 as recognizee_cert_type,
      null as recognizee_cert_no,
      null as recognizee_phone,
      'true' as   is_same,
      m.id as sales_id,
      a.column_8 as sales_man,
      a.column_16 as   commission_rate,
      a.column_17 as   commission_amt,
      ic.company_id as   policy_comp_id,
      ic.company_name as policy_company,
      o.id as org_id,
      o.org_name as  org_company,
      null as card_no,
      #{policyType} as policy_type,
        pt.name as order_policy_type_name,
        pt.id as order_policy_type_id,
        b.title as product_name,
        a.column_11 as product_code,
        a.column_14 as proxy_rate,
        a.column_15 as proxy_fee,
        null as bill_no,
        null as next_policy_fee,
        null as first_policy_fee,
        null as pay_period,
        null as pay_type,
        null as policy_amt,
        null as policy_man_cnt,
        a.column_18 as remark,
        '1' as order_from,
        a.column_9 as create_time,
        now() as update_time 
from t_fs_temp a left join t_fs_insurance b on a.column_12 = b.title
                 left join managers m on a.column_8  = m.nickname
                 left join t_fs_insurance_company ic  on a.column_1 = ic.company_name
                 left join t_org o on a.column_2 = o.org_name
                 left join t_policy_type pt on a.column_3  = pt.`name`
where a.column_0 = #{importId}    
  </insert>
  
  <insert id="insertOrderTabBybxxh1" parameterType="map">
  	insert into ct_order(
	  order_no,
      prod_id,
      order_status,
      order_period,
      start_time,
      end_time,
      order_amt,
      user_cert_no,
      user_cert_type,
      user_name,
      user_phone,
      recognizee_name,
      recognizee_cert_type,
      recognizee_cert_no,
      recognizee_phone,
      is_same,
      sales_id,
      sales_man,
      commission_rate,
      commission_amt,
      policy_comp_id,
      policy_company,
      org_id,
      org_company,
      card_no,
      policy_type,
        order_policy_type_name,
        order_policy_type_id,
        product_name,
        product_code,
        proxy_rate,
        proxy_fee,
        bill_no,
        next_policy_fee,
        first_policy_fee,
        pay_period,
        pay_type,
        policy_amt,
        policy_man_cnt,
        remark,
        order_from,
        create_time,
        update_time
	)
	select a.column_7 as order_no,
      b.ins_id as prod_id,
      '1' as order_status,
      null as order_period,
      a.column_14 as  start_time,
      a.column_15 as  end_time,
      a.column_9 as  order_amt,
      null as  user_cert_no,
      0 as   user_cert_type,
      a.column_3 as  user_name,
      null as user_phone,
      a.column_3 as recognizee_name,
      0 as recognizee_cert_type,
      null as recognizee_cert_no,
      null as recognizee_phone,
      'true' as   is_same,
      m.id as sales_id,
      a.column_5 as sales_man,
      a.column_12 as   commission_rate,
      a.column_13 as   commission_amt,
      ic.company_id as   policy_comp_id,
      ic.company_name as policy_company,
      o.id as org_id,
      o.org_name as  org_company,
      a.column_4 as card_no,
      #{policyType} as policy_type,
        pt.name as order_policy_type_name,
        pt.id as order_policy_type_id,
        b.title as product_name,
        null as product_code,
        a.column_10 as proxy_rate,
        a.column_11 as proxy_fee,
        null as bill_no,
        null as next_policy_fee,
        null as first_policy_fee,
        null as pay_period,
        null as pay_type,
        null as policy_amt,
        null as policy_man_cnt,
        a.column_16 as remark,
        '1' as order_from,
        a.column_6 as create_time,
        now() as update_time 
from t_fs_temp a left join t_fs_insurance b on a.column_8 = b.title
                 left join managers m on a.column_5  = m.nickname
                 left join t_fs_insurance_company ic  on a.column_1 = ic.company_name
                 left join t_org o on a.column_2 = o.org_name
                 left join t_policy_type pt on a.column_8  = pt.`name`
where a.column_0 = #{importId}    
  </insert>
  
  <insert id="processBxxh3" parameterType="map">
  	INSERT INTO t_fs_insurance(title)
	SELECT DISTINCT `title` FROM (
	SELECT  
	      b.ins_id AS id,
	      a.column_2 AS `title` 
	FROM t_fs_temp a LEFT JOIN t_fs_insurance b ON a.column_2 = b.title
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL; 
	
	INSERT INTO managers(
	  `username` ,
	  `nickname` ,
	  `password` ,
	  `salt` ,
	  `enabled` ,
	  `operator`)
	SELECT DISTINCT `username` ,
	  `nickname` ,
	  `password` ,
	  `salt` ,
	  `enabled` ,
	  `operator` FROM (
	SELECT  
	      m.id AS id,
	      a.column_19 AS `username`, 
	      a.column_19 AS `nickname`,
	      a.column_19 AS `password`,
	      'aaabbbccc' AS `salt`,
	      1 AS `enabled` ,
	      1 AS `operator`
	FROM t_fs_temp a LEFT JOIN managers m ON a.column_19  = m.nickname
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	
	INSERT INTO t_fs_insurance_company(
	  `company_name`,`del_Flag`)
	SELECT DISTINCT `company_name`,`del_Flag` FROM (
	SELECT  
	      ic.company_id AS id,
	      a.column_1 AS `company_name`,
	      0 AS `del_Flag`
	FROM t_fs_temp a LEFT JOIN t_fs_insurance_company ic  ON a.column_1 = ic.company_name
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	
	INSERT INTO t_org(
	  `org_name`,`status`)
	SELECT DISTINCT `org_name`,`status` FROM (
	SELECT  
	      o.id AS id,
	      a.column_4 AS `org_name`,
	      'T' AS `status`
	FROM t_fs_temp a LEFT JOIN t_org o ON a.column_4 = o.org_name
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	                
	INSERT INTO t_policy_type(
	  `name`,`code`,`status`)
	SELECT DISTINCT `name`,`code`,`status` FROM (
	SELECT  
	      pt.id AS id,
	      a.column_2 AS `name`,
	      a.column_2 AS `code`,
	      'T' AS `status`
	FROM t_fs_temp a LEFT JOIN t_policy_type pt ON a.column_2  = pt.`name`
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
  	
  </insert>
  
  <insert id="processBxxh2" parameterType="map">
  	INSERT INTO t_fs_insurance(title)
	SELECT DISTINCT `title` FROM (
	SELECT  
	      b.ins_id AS id,
	      a.column_12 AS `title` 
	FROM t_fs_temp a LEFT JOIN t_fs_insurance b ON a.column_12 = b.title
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL; 
	                 
	INSERT INTO managers(
	  `username` ,
	  `nickname` ,
	  `password` ,
	  `salt` ,
	  `enabled` ,
	  `operator`)
	SELECT DISTINCT `username` ,
	  `nickname` ,
	  `password` ,
	  `salt` ,
	  `enabled` ,
	  `operator` FROM (
	SELECT  
	      m.id AS id,
	      a.column_8 AS `username`, 
	      a.column_8 AS `nickname`,
	      a.column_8 AS `password`,
	      'aaabbbccc' AS `salt`,
	      1 AS `enabled` ,
	      1 AS `operator`
	FROM t_fs_temp a LEFT JOIN managers m ON a.column_8  = m.nickname
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	
	INSERT INTO t_fs_insurance_company(
	  `company_name`,`del_Flag`)
	SELECT DISTINCT `company_name`,`del_Flag` FROM (
	SELECT  
	      ic.company_id AS id,
	      a.column_1 AS `company_name`,
	      0 AS `del_Flag`
	FROM t_fs_temp a LEFT JOIN t_fs_insurance_company ic  ON a.column_1 = ic.company_name
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL; 
	
	INSERT INTO t_org(
	  `org_name`,`status`)
	SELECT DISTINCT `org_name`,`status` FROM (
	SELECT  
	      o.id AS id,
	      a.column_2 AS `org_name`,
	      'T' AS `status`
	FROM t_fs_temp a LEFT JOIN t_org o ON a.column_2 = o.org_name
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	                
	INSERT INTO t_policy_type(
	  `name`,`code`,`status`)
	SELECT DISTINCT `name`,`code`,`status` FROM (
	SELECT  
	      pt.id AS id,
	      a.column_3 AS `name`,
	      a.column_3 AS `code`,
	      'T' AS `status`
	FROM t_fs_temp a LEFT JOIN t_policy_type pt ON a.column_3  = pt.`name`
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;  	
  </insert>
  
  <insert id="processBxxh1" parameterType="map">
  	INSERT INTO t_fs_insurance(title)
	SELECT DISTINCT `title` FROM (
	SELECT  
	      b.ins_id AS id,
	      a.column_8 AS `title` 
	FROM t_fs_temp a LEFT JOIN t_fs_insurance b ON a.column_8 = b.title
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	INSERT INTO managers(
	  `username` ,
	  `nickname` ,
	  `password` ,
	  `salt` ,
	  `enabled` ,
	  `operator`)
	SELECT DISTINCT `username` ,
	  `nickname` ,
	  `password` ,
	  `salt` ,
	  `enabled` ,
	  `operator` FROM (
	SELECT  
	      m.id AS id,
	      a.column_5 AS `username`, 
	      a.column_5 AS `nickname`,
	      a.column_5 AS `password`,
	      'aaabbbccc' AS `salt`,
	      1 AS `enabled` ,
	      1 AS `operator`
	FROM t_fs_temp a LEFT JOIN managers m ON a.column_5  = m.nickname
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	
	INSERT INTO t_fs_insurance_company(
	  `company_name`,`del_Flag`)
	SELECT DISTINCT `company_name`,`del_Flag` FROM (
	SELECT  
	      ic.company_id AS id,
	      a.column_1 AS `company_name`,
	      0 AS `del_Flag`
	FROM t_fs_temp a LEFT JOIN t_fs_insurance_company ic  ON a.column_1 = ic.company_name
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL; 
	
	INSERT INTO t_org(
	  `org_name`,`status`)
	SELECT DISTINCT `org_name`,`status` FROM (
	SELECT  
	      o.id AS id,
	      a.column_2 AS `org_name`,
	      'T' AS `status`
	FROM t_fs_temp a LEFT JOIN t_org o ON a.column_2 = o.org_name
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
	                
	INSERT INTO t_policy_type(
	  `name`,`code`,`status`)
	SELECT DISTINCT `name`,`code`,`status` FROM (
	SELECT  
	      pt.id AS id,
	      a.column_8 AS `name`,
	      a.column_8 AS `code`,
	      'T' AS `status`
	FROM t_fs_temp a LEFT JOIN t_policy_type pt ON a.column_8  = pt.`name`
	WHERE a.column_0 = #{importId} 
	)dd  WHERE dd.id IS NULL;
  </insert>
  
</mapper>